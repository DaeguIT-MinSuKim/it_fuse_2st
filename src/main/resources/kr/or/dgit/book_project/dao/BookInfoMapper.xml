<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.dgit.book_project.dao.BookInfoMapper">


	<resultMap type="BookInfo" id="BookInfoResult">
		<id property="bCode" column="b_code" />
		<id property="bSubCode" column="b_sub_code" />
		<result property="bName" column="b_name" />
		<result property="author" column="author" />
		<result property="price" column="price" />
		<result property="insertDate" column="insert_date" />
		<result property="bLendCount" column="b_lend_count" />
		<result property="isLending" column="is_lending" />
		<result property="isDel" column="is_del" />
		<association property="coden"
			resultMap="kr.or.dgit.book_project.dao.CodenMapper.CodenResult" />
		<association property="publisherInfo"
			resultMap="kr.or.dgit.book_project.dao.PublisherInfoMapper.PublisherInfoResult" />
	</resultMap>


	<!-- ################################# sql 구문 위치 ################################# -->

	<sql id="insertSql">
		insert into bookInfo(b_code, b_sub_code, c_name, b_name,
		author, p_code, price, insert_date) values
		(#{bCode},#{bSubCode},#{coden.cName},#{bName},#{author},#{publisherInfo.pCode},#{price},
		current_date);
	</sql>
	<sql id="selectCountSql">
		select count(*) from bookInfo b
	</sql>
	<sql id="selectSql">
		SELECT b_code, b_sub_code, c_name, b_name, author, p_code, price,
		insert_date, b_lend_count, is_lending, is_del FROM bookinfo b
	</sql>


	<sql id="selectLeftSql">
		select b.b_code, b.b_sub_code, b.c_name, c.c_code, b_name,
		author,
		b.p_code, publisher, p_name, p_tel, p_zip_code, p_address,
		price,
		insert_date, b_lend_count, is_lending, is_del from bookInfo b
		right outer join publisherInfo p on b.p_code = p.p_code
		left outer join
		coden c on b.c_name = c.c_name
	</sql>
	<sql id="selectRightSql">
		select b.b_code, b.b_sub_code, b.c_name, c.c_code, b_name,
		author, b.p_code,
		publisher, p_name, p_tel, p_zip_code, p_address,
		price, insert_date,
		b_lend_count, is_lending, is_del from bookInfo b
		right outer join publisherInfo p on b.p_code = p.p_code
		right outer
		join
		coden c on b.c_name = c.c_name
	</sql>
	<sql id="updateSql">
		UPDATE bookinfo
		<set>
			<if test="bName != null">b_name=#{bName},</if>
			<if test="author != null">author=#{author},</if>
			<if test="price != null">price=#{price},</if>
			<if test="publisherInfo != null">p_code=#{publisherInfo.pCode}</if>

		</set>
	</sql>

	<sql id="whereSql">
		<where>
			<if test="bCode != null">
				b.b_code= #{bCode}
			</if>
			<if test="bSubCode != null">
				and b.b_sub_code =#{bSubCode}
			</if>
			<if test="bName != null">
				and b.b_name like #{bName}
			</if>
			<if test="author != null">
				and author like #{author}
			</if>
			<if test="cName != null">
				and b.c_name =#{cName}
			</if>

			<if test="pCode != null">
				and b.p_code =#{pCode}
			</if>

			<if test="publisher != null">
				and p.publisher like #{publisher}
			</if>
			<if test="isDel != null">
				and b.is_del = #{isDel}
			</if>
			<if test="isLending != null">
				and b.is_lending = #{isLending}
			</if>
			<if test="onlyBook != null">
				and b.b_code is not null
			</if>
		</where>
	</sql>


	<!-- ################################# 연결부분 ################################# -->

	<insert id="insertBookInfo" parameterType="BookInfo">
		<include refid="insertSql" />
	</insert>
	<select id="countBookInfo" parameterType="hashmap" resultType="int">
		<include refid="selectCountSql" />
		<include refid="whereSql" />
	</select>
	<!-- selectLeftSql로 바꿈 -->
	<select id="selectBookInfoOne" parameterType="hashmap"
		resultMap="BookInfoResult">
		<include refid="selectLeftSql" />
		<include refid="whereSql" />
	</select>

	<update id="updateBookInfo" parameterType="BookInfo">
		<include refid="updateSql" />
		where b_code = #{bCode} and b_sub_code = #{bSubCode}
	</update>

	<update id="setDelBookInfo" parameterType="BookInfo">
		update bookinfo set
		is_del = #{isDel}
		where b_code = #{bCode} and b_sub_code = #{bSubCode}
	</update>

	<select id="selectAllBookInfo" parameterType="hashmap"
		resultMap="BookInfoResult">
		<include refid="selectLeftSql" />
		<include refid="whereSql" />
		union
		<include refid="selectRightSql" />
		<include refid="whereSql" />
	</select>

	<select id="selectIslending" parameterType="hashmap" resultMap="BookInfoResult">
		<include refid="selectLeftSql" />
		<include refid="whereSql" />
	</select>

	<select id="selectOnlyBookInfo" parameterType="BookInfo" resultMap="BookInfoResult">
		<include refid="selectSql" />
		<include refid="whereSql" />
	</select>
	<!-- 총 보유 권수 -->
	<select id="selectAllCountBookInfo" parameterType="hashmap"
		resultType="int">
		select count(*) from bookInfo
	</select>
	
	<!-- 분야별 보유 권수 -->
	<select id="subCountBookInfo" resultType="map">
		select c_name = #{cName} count(*) from bookInfo group by c_name=#{cName}
	</select>
	
	<!-- 총 연체 권수 : 반납된 예전 기록 말고 **현재시점**에서 반납되지 않고 연체중인 권수 -->
	<select id="blackCountBookInfo" parameterType="Hashmap" resultType="int">
		select count(*) from bookInfo b
		inner join paymentIO p on b.b_code = p.b_code and b.b_sub_code = p.b_sub_code 
		where return_date is null and (DATEDIFF(CURRENT_DATE,lend_date) >= 3)
	</select>
	
	<!-- 총 대여횟수 : 예전 기록 말고 **현재시점**에서 대여상태인 권수 -->
	<select id="lendCountBookInfo" parameterType="Hashmap" resultType="int">	
		select count(*) from bookInfo b
		inner join paymentIO p on b.b_code = p.b_code and b.b_sub_code = p.b_sub_code 
		where return_date is null
	</select>
</mapper>
